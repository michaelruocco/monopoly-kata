plugins {
    id 'java-library'
    id 'idea'
    id 'jacoco'
    id 'org.unbroken-dome.test-sets' version '3.0.1'
    id "com.diffplug.spotless" version "5.12.0"
    id "com.github.ben-manes.versions" version "0.38.0"
    id "pl.allegro.tech.build.axion-release" version "1.13.1"
    id "org.sonarqube" version "3.1.1"
    id "nebula.lint" version "16.22.0"
    id "com.adarshr.test-logger" version "3.0.0"
}

group "com.github.michaelruocco"

ext {
    lombokVersion = "1.18.20"
    slf4jVersion = "1.7.30"

    junitVersion = "5.7.1"
    assertJVersion = "3.19.0"
}

scmVersion {
    versionCreator "versionWithBranch"
    tag {
        prefix = "${name}-"
    }
}
project.version = scmVersion.version

repositories {
    mavenCentral()
}

gradleLint {
    rules = ['all-dependency']
    alwaysRun = false
}

testSets {
    cucumberTest
}

configurations {
    cucumberTest.setCanBeResolved(true)
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.slf4j:slf4j-api:${slf4jVersion}"

    testRuntimeOnly "org.slf4j:slf4j-simple:${slf4jVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.assertj:assertj-core:${assertJVersion}"
    testImplementation "org.mockito:mockito-core:3.9.0"

    cucumberTestCompile "org.slf4j:slf4j-simple:${slf4jVersion}"
    cucumberTestCompile "io.cucumber:cucumber-java:6.10.2"
    cucumberTestCompile "org.assertj:assertj-core:${assertJVersion}"
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "org.slf4j.simpleLogger.defaultLogLevel", "debug"
}

testlogger {
    theme 'mocha'
    showStandardStreams false
}

task cucumber() {
    dependsOn assemble, testClasses, cucumberTestClasses

    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberTestRuntime + configurations.runtime + sourceSets.main.output + sourceSets.cucumberTest.output
            args = ['--plugin', 'pretty', '--glue', 'uk.co.mruoc.monopoly', 'src/cucumberTest/resources']
        }
    }
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    dependsOn test
    sourceSets sourceSets.main
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }
}

project.tasks["sonarqube"].dependsOn jacocoTestReport
sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "michaelruocco"
        property "sonar.projectKey", "michaelruocco_${name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/report.xml"
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ["alpha", "beta", "rc", "cr", "m", "preview"].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject("Release candidate")
            }
        }
    }
}